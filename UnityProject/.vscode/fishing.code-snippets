{
    "Initable Model": {
        "scope": "",
        "prefix": "im",
        "body": [
            "using System;",
            "using Core.Storage;",
            "using UnityEngine;",
            "",
            "namespace Game.Models",
            "{",
            "    public class BaitsStatisticModel : InitableModel<BaitsStatisticModel.Data>",
            "    {",
            "        #region Data",
            "#pragma warning disable 0649",
            "        [SerializeField] private Data _data;",
            "#pragma warning restore 0649",
            "        #endregion",
            "        protected override Data DataBase => _data;",
            "",
            "        [Serializable]",
            "        public class Data : DataBase",
            "        {",
            "",
            "        }",
            "    }",
            "}",
        ],
        "description": "teamplate for initable model"
    },
    "Bool reactive variable": {
        "scope": "",
        "prefix": "rv",
        "body": [
            "public bool Is${1:element} {get; private set;}",
            "        public event Action On${1:element}Changed;",
            "",
            "        public void Set${1:element}(bool value)",
            "        {",
            "            Is${1:element} = value;",
            "            On${1:element}Changed?.Invoke();",
            "        }",
        ],
        "description": "teamplate for reactive bool variable"
    },
    "Tutorial Hilight snippet": {
        "scope": "",
        "prefix": "tutHi",
        "body": [
            "private void UpdateTutorialHilight()",
            "        {",
            "            if (ViewModel.IsTutorialHilight)",
            "            {",
            "                EnableTutorialHiligth();",
            "            }",
            "            else",
            "            {",
            "                DisableTutorialHilight();",
            "            }",
            "        }",
            "",
            "        private void EnableTutorialHiligth()",
            "        {",
            "            View.SafeActivateComponent<TutorialHilight>();",
            "        }",
            "",
            "        private void DisableTutorialHilight()",
            "        {",
            "            View.SafeDeactivateComponent<TutorialHilight>();",
            "        }",
        ],
        "description": "teamplate for Tutorial hilight. Search codebase for examples (UpdateTutorialHilight). Expected to udpate on start. Subscribe to changes of view model. disable on hide view (+ unsubscribe)"
    },
    "View Model is show fields": {
        "scope": "",
        "prefix": "vm",
        "body": [
            "public event Action OnShowChanged;",

        "public bool IsShow {get; private set;}",
        
        "public void Show(bool show)",
        "{",
            "IsShow = show;",
            "OnShowChanged?.Invoke()",
        "}",
        ],
        "description": "teamplate for Tutorial hilight. Search codebase for examples (UpdateTutorialHilight). Expected to udpate on start. Subscribe to changes of view model. disable on hide view (+ unsubscribe)"
    },
}